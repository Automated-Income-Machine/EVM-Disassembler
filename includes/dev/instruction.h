
#pragma once

#include <dev/types.h>
#include <dev/mnemonic.h>
#include <dev/gas.h>

typedef struct
{
    mnemonic_t	mnemonic;
	ubyte		opcode;
	operand_t	input_type:2;
	ubyte		input_len:6;
	operand_t	output_type;
	dword		static_gas;
} instruction_data_t;

const instruction_data_t lookup_table[] = {
	{ .mnemonic = MN_STOP,				.static_gas = SGAS_STOP,			.input_type = OPERAND_NONE,		.input_len = 0x0,	.output_type = OPERAND_NONE	 },
	{ .mnemonic = MN_ADD,				.static_gas = SGAS_ADD,				.input_type = OPERAND_STACK,	.input_len = 0x2,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_MUL,				.static_gas = SGAS_MUL,				.input_type = OPERAND_STACK,	.input_len = 0x2,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_SUB,				.static_gas = SGAS_SUB,				.input_type = OPERAND_STACK,	.input_len = 0x2,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_DIV,				.static_gas = SGAS_DIV,				.input_type = OPERAND_STACK,	.input_len = 0x2,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_SDIV,				.static_gas = SGAS_SDIV,			.input_type = OPERAND_STACK,	.input_len = 0x2,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_MOD,				.static_gas = SGAS_MOD,				.input_type = OPERAND_STACK,	.input_len = 0x2,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_SMOD,				.static_gas = SGAS_SMOD,			.input_type = OPERAND_STACK,	.input_len = 0x2,	.output_type = OPERAND_STACK },

	{ .mnemonic = MN_ADDMOD,			.static_gas = SGAS_ADDMOD,			.input_type = OPERAND_STACK,	.input_len = 0x3,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_MULMOD,			.static_gas = SGAS_MULMOD,			.input_type = OPERAND_STACK,	.input_len = 0x3,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_EXP,				.static_gas = SGAS_EXP,				.input_type = OPERAND_STACK,	.input_len = 0x2,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_SIGNEXTEND,		.static_gas = SGAS_SIGNEXTEND,		.input_type = OPERAND_STACK,	.input_len = 0x2,	.output_type = OPERAND_STACK },
	{ },
	{ },
	{ },
	{ },

	{ .mnemonic = MN_LT,				.static_gas = SGAS_LT,				.input_type = OPERAND_STACK,	.input_len = 0x2,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_GT,				.static_gas = SGAS_GT,				.input_type = OPERAND_STACK,	.input_len = 0x2,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_SLT,				.static_gas = SGAS_SLT,				.input_type = OPERAND_STACK,	.input_len = 0x2,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_SGT,				.static_gas = SGAS_SGT,				.input_type = OPERAND_STACK,	.input_len = 0x2,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_EQ,				.static_gas = SGAS_EQ,				.input_type = OPERAND_STACK,	.input_len = 0x2,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_ISZERO,			.static_gas = SGAS_ISZERO,			.input_type = OPERAND_STACK,	.input_len = 0x1,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_AND,				.static_gas = SGAS_AND,				.input_type = OPERAND_STACK,	.input_len = 0x2,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_OR,				.static_gas = SGAS_OR,				.input_type = OPERAND_STACK,	.input_len = 0x2,	.output_type = OPERAND_STACK },

	{ .mnemonic = MN_XOR,				.static_gas = SGAS_XOR,				.input_type = OPERAND_STACK,	.input_len = 0x2,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_NOT,				.static_gas = SGAS_NOT,				.input_type = OPERAND_STACK,	.input_len = 0x1,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_BYTE,				.static_gas = SGAS_BYTE,			.input_type = OPERAND_STACK,	.input_len = 0x2,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_SHL,				.static_gas = SGAS_SHL,				.input_type = OPERAND_STACK,	.input_len = 0x2,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_SHR,				.static_gas = SGAS_SHR,				.input_type = OPERAND_STACK,	.input_len = 0x2,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_SAR,				.static_gas = SGAS_SAR,				.input_type = OPERAND_STACK,	.input_len = 0x2,	.output_type = OPERAND_STACK },
	{ },
	{ },

	{ .mnemonic = MN_SHA3,				.static_gas = SGAS_SHA3,			.input_type = OPERAND_STACK,	.input_len = 0x2,	.output_type = OPERAND_STACK },
	{ },
	{ },
	{ },
	{ },
	{ },
	{ },
	{ },

	{ },
	{ },
	{ },
	{ },
	{ },
	{ },
	{ },
	{ },

	{ .mnemonic = MN_ADDRESS,			.static_gas = SGAS_ADDRESS,			.input_type = OPERAND_NONE,		.input_len = 0x0,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_BALANCE,			.static_gas = SGAS_BALANCE,			.input_type = OPERAND_STACK,	.input_len = 0x1,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_ORIGIN,			.static_gas = SGAS_ORIGIN,			.input_type = OPERAND_NONE,		.input_len = 0x0,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_CALLER,			.static_gas = SGAS_CALLER,			.input_type = OPERAND_NONE,		.input_len = 0x0,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_CALLVALUE,			.static_gas = SGAS_CALLVALUE,		.input_type = OPERAND_NONE,		.input_len = 0x0,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_CALLDATALOAD,		.static_gas = SGAS_CALLDATALOAD,	.input_type = OPERAND_STACK,	.input_len = 0x1,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_CALLDATASIZE,		.static_gas = SGAS_CALLDATASIZE,	.input_type = OPERAND_NONE,		.input_len = 0x0,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_CALLDATACOPY,		.static_gas = SGAS_ADDRESS,			.input_type = OPERAND_STACK,	.input_len = 0x3,	.output_type = OPERAND_STACK },

	{ .mnemonic = MN_CODESIZE,			.static_gas = SGAS_CODESIZE,		.input_type = OPERAND_NONE,		.input_len = 0x0,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_CODECOPY,			.static_gas = SGAS_CODECOPY,		.input_type = OPERAND_STACK,	.input_len = 0x3,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_GASPRICE,			.static_gas = SGAS_GASPRICE,		.input_type = OPERAND_NONE,		.input_len = 0x0,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_EXTCODESIZE,		.static_gas = SGAS_EXTCODESIZE,		.input_type = OPERAND_STACK,	.input_len = 0x1,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_EXTCODECOPY,		.static_gas = SGAS_EXTCODECOPY,		.input_type = OPERAND_STACK,	.input_len = 0x4,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_RETURNDATASIZE,	.static_gas = SGAS_RETURNDATASIZE,	.input_type = OPERAND_NONE,	.input_len = 0x0,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_RETURNDATACOPY,	.static_gas = SGAS_RETURNDATACOPY,	.input_type = OPERAND_STACK,	.input_len = 0x3,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_EXTCODEHASH,		.static_gas = SGAS_EXTCODEHASH,		.input_type = OPERAND_STACK,	.input_len = 0x1,	.output_type = OPERAND_STACK },

	{ .mnemonic = MN_BLOCKHASH,			.static_gas = SGAS_BLOCKHASH,		.input_type = OPERAND_STACK,	.input_len = 0x1,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_COINBASE,			.static_gas = SGAS_COINBASE,		.input_type = OPERAND_NONE,		.input_len = 0x0,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_TIMESTAMP,			.static_gas = SGAS_TIMESTAMP,		.input_type = OPERAND_NONE,		.input_len = 0x0,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_NUMBER,			.static_gas = SGAS_NUMBER,			.input_type = OPERAND_NONE,		.input_len = 0x0,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_DIFFICULTY,		.static_gas = SGAS_DIFFICULTY,		.input_type = OPERAND_NONE,		.input_len = 0x0,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_GASLIMIT,			.static_gas = SGAS_GASLIMIT,		.input_type = OPERAND_NONE,		.input_len = 0x0,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_CHAINID,			.static_gas = SGAS_CHAINID,			.input_type = OPERAND_NONE,		.input_len = 0x0,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_SELFBALANCE,		.static_gas = SGAS_SELFBALANCE,		.input_type = OPERAND_NONE,		.input_len = 0x0,	.output_type = OPERAND_STACK },

	{ .mnemonic = MN_BASEFEE,			.static_gas = SGAS_BASEFEE,			.input_type = OPERAND_NONE,		.input_len = 0x0,	.output_type = OPERAND_STACK },
	{ },
	{ },
	{ },
	{ },
	{ },
	{ },
	{ },

	{ .mnemonic = MN_POP,				.static_gas = SGAS_POP,				.input_type = OPERAND_STACK,	.input_len = 0x1,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_MLOAD,				.static_gas = SGAS_MLOAD,			.input_type = OPERAND_STACK,	.input_len = 0x1,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_MSTORE,			.static_gas = SGAS_MSTORE,			.input_type = OPERAND_STACK,	.input_len = 0x2,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_MSTORE8,			.static_gas = SGAS_MSTORE8,			.input_type = OPERAND_STACK,	.input_len = 0x2,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_SLOAD,				.static_gas = SGAS_SLOAD,			.input_type = OPERAND_STACK,	.input_len = 0x1,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_SSTORE,			.static_gas = SGAS_SSTORE,			.input_type = OPERAND_STACK,	.input_len = 0x2,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_JUMP,				.static_gas = SGAS_JUMP,			.input_type = OPERAND_STACK,	.input_len = 0x1,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_JUMPI,				.static_gas = SGAS_JUMPI,			.input_type = OPERAND_STACK,	.input_len = 0x2,	.output_type = OPERAND_STACK },

	{ .mnemonic = MN_PC,				.static_gas = SGAS_PC,				.input_type = OPERAND_NONE,		.input_len = 0x0,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_MSIZE,				.static_gas = SGAS_MSIZE,			.input_type = OPERAND_NONE,		.input_len = 0x0,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_GAS,				.static_gas = SGAS_GAS,				.input_type = OPERAND_NONE,		.input_len = 0x0,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_JUMPDEST,			.static_gas = SGAS_JUMPDEST,		.input_type = OPERAND_NONE,		.input_len = 0x0,	.output_type = OPERAND_STACK },
	{ },
	{ },
	{ },
	{ },

	{ .mnemonic = MN_PUSH1,				.static_gas = SGAS_PUSH,			.input_type = OPERAND_IMM,		.input_len = 0x1,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_PUSH2,				.static_gas = SGAS_PUSH,			.input_type = OPERAND_IMM,		.input_len = 0x2,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_PUSH3,				.static_gas = SGAS_PUSH,			.input_type = OPERAND_IMM,		.input_len = 0x3,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_PUSH4,				.static_gas = SGAS_PUSH,			.input_type = OPERAND_IMM,		.input_len = 0x4,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_PUSH5,				.static_gas = SGAS_PUSH,			.input_type = OPERAND_IMM,		.input_len = 0x5,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_PUSH6,				.static_gas = SGAS_PUSH,			.input_type = OPERAND_IMM,		.input_len = 0x6,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_PUSH7,				.static_gas = SGAS_PUSH,			.input_type = OPERAND_IMM,		.input_len = 0x7,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_PUSH8,				.static_gas = SGAS_PUSH,			.input_type = OPERAND_IMM,		.input_len = 0x8,	.output_type = OPERAND_STACK },

	{ .mnemonic = MN_PUSH9,				.static_gas = SGAS_PUSH,			.input_type = OPERAND_IMM,		.input_len = 0x9,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_PUSH10,			.static_gas = SGAS_PUSH,			.input_type = OPERAND_IMM,		.input_len = 0xA,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_PUSH11,			.static_gas = SGAS_PUSH,			.input_type = OPERAND_IMM,		.input_len = 0xB,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_PUSH12,			.static_gas = SGAS_PUSH,			.input_type = OPERAND_IMM,		.input_len = 0xC,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_PUSH13,			.static_gas = SGAS_PUSH,			.input_type = OPERAND_IMM,		.input_len = 0xD,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_PUSH14,			.static_gas = SGAS_PUSH,			.input_type = OPERAND_IMM,		.input_len = 0xE,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_PUSH15,			.static_gas = SGAS_PUSH,			.input_type = OPERAND_IMM,		.input_len = 0xF,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_PUSH16,			.static_gas = SGAS_PUSH,			.input_type = OPERAND_IMM,		.input_len = 0x10,	.output_type = OPERAND_STACK },

	{ .mnemonic = MN_PUSH17,			.static_gas = SGAS_PUSH,			.input_type = OPERAND_IMM,		.input_len = 0x11,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_PUSH18,			.static_gas = SGAS_PUSH,			.input_type = OPERAND_IMM,		.input_len = 0x12,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_PUSH19,			.static_gas = SGAS_PUSH,			.input_type = OPERAND_IMM,		.input_len = 0x13,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_PUSH20,			.static_gas = SGAS_PUSH,			.input_type = OPERAND_IMM,		.input_len = 0x14,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_PUSH21,			.static_gas = SGAS_PUSH,			.input_type = OPERAND_IMM,		.input_len = 0X15,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_PUSH22,			.static_gas = SGAS_PUSH,			.input_type = OPERAND_IMM,		.input_len = 0x16,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_PUSH23,			.static_gas = SGAS_PUSH,			.input_type = OPERAND_IMM,		.input_len = 0x17,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_PUSH24,			.static_gas = SGAS_PUSH,			.input_type = OPERAND_IMM,		.input_len = 0x18,	.output_type = OPERAND_STACK },

	{ .mnemonic = MN_PUSH25,			.static_gas = SGAS_PUSH,			.input_type = OPERAND_IMM,		.input_len = 0x19,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_PUSH26,			.static_gas = SGAS_PUSH,			.input_type = OPERAND_IMM,		.input_len = 0x1A,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_PUSH27,			.static_gas = SGAS_PUSH,			.input_type = OPERAND_IMM,		.input_len = 0x1B,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_PUSH28,			.static_gas = SGAS_PUSH,			.input_type = OPERAND_IMM,		.input_len = 0x1C,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_PUSH29,			.static_gas = SGAS_PUSH,			.input_type = OPERAND_IMM,		.input_len = 0x1D,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_PUSH30,			.static_gas = SGAS_PUSH,			.input_type = OPERAND_IMM,		.input_len = 0x1E,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_PUSH31,			.static_gas = SGAS_PUSH,			.input_type = OPERAND_IMM,		.input_len = 0x1F,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_PUSH32,			.static_gas = SGAS_PUSH,			.input_type = OPERAND_IMM,		.input_len = 0x20,	.output_type = OPERAND_STACK },

	{ .mnemonic = MN_DUP1,				.static_gas = SGAS_DUP,				.input_type = OPERAND_STACK,	.input_len = 0x2,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_DUP2,				.static_gas = SGAS_DUP,				.input_type = OPERAND_STACK,	.input_len = 0x2,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_DUP3,				.static_gas = SGAS_DUP,				.input_type = OPERAND_STACK,	.input_len = 0x2,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_DUP4,				.static_gas = SGAS_DUP,				.input_type = OPERAND_STACK,	.input_len = 0x2,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_DUP5,				.static_gas = SGAS_DUP,				.input_type = OPERAND_STACK,	.input_len = 0x2,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_DUP6,				.static_gas = SGAS_DUP,				.input_type = OPERAND_STACK,	.input_len = 0x2,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_DUP7,				.static_gas = SGAS_DUP,				.input_type = OPERAND_STACK,	.input_len = 0x2,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_DUP8,				.static_gas = SGAS_DUP,				.input_type = OPERAND_STACK,	.input_len = 0x2,	.output_type = OPERAND_STACK },

	{ .mnemonic = MN_DUP9,				.static_gas = SGAS_DUP,				.input_type = OPERAND_STACK,	.input_len = 0x2,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_DUP10,				.static_gas = SGAS_DUP,				.input_type = OPERAND_STACK,	.input_len = 0x2,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_DUP11,				.static_gas = SGAS_DUP,				.input_type = OPERAND_STACK,	.input_len = 0x2,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_DUP12,				.static_gas = SGAS_DUP,				.input_type = OPERAND_STACK,	.input_len = 0x2,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_DUP13,				.static_gas = SGAS_DUP,				.input_type = OPERAND_STACK,	.input_len = 0x2,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_DUP14,				.static_gas = SGAS_DUP,				.input_type = OPERAND_STACK,	.input_len = 0x2,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_DUP15,				.static_gas = SGAS_DUP,				.input_type = OPERAND_STACK,	.input_len = 0x2,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_DUP16,				.static_gas = SGAS_DUP,				.input_type = OPERAND_STACK,	.input_len = 0x2,	.output_type = OPERAND_STACK },

	{ .mnemonic = MN_SWAP1,				.static_gas = SGAS_SWAP,			.input_type = OPERAND_STACK,	.input_len = 0x2,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_SWAP2,				.static_gas = SGAS_SWAP,			.input_type = OPERAND_STACK,	.input_len = 0x2,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_SWAP3,				.static_gas = SGAS_SWAP,			.input_type = OPERAND_STACK,	.input_len = 0x2,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_SWAP4,				.static_gas = SGAS_SWAP,			.input_type = OPERAND_STACK,	.input_len = 0x2,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_SWAP5,				.static_gas = SGAS_SWAP,			.input_type = OPERAND_STACK,	.input_len = 0x2,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_SWAP6,				.static_gas = SGAS_SWAP,			.input_type = OPERAND_STACK,	.input_len = 0x2,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_SWAP7,				.static_gas = SGAS_SWAP,			.input_type = OPERAND_STACK,	.input_len = 0x2,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_SWAP8,				.static_gas = SGAS_SWAP,			.input_type = OPERAND_STACK,	.input_len = 0x2,	.output_type = OPERAND_STACK },

	{ .mnemonic = MN_SWAP9,				.static_gas = SGAS_SWAP,			.input_type = OPERAND_STACK,	.input_len = 0x2,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_SWAP10,			.static_gas = SGAS_SWAP,			.input_type = OPERAND_STACK,	.input_len = 0x2,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_SWAP11,			.static_gas = SGAS_SWAP,			.input_type = OPERAND_STACK,	.input_len = 0x2,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_SWAP12,			.static_gas = SGAS_SWAP,			.input_type = OPERAND_STACK,	.input_len = 0x2,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_SWAP13,			.static_gas = SGAS_SWAP,			.input_type = OPERAND_STACK,	.input_len = 0x2,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_SWAP14,			.static_gas = SGAS_SWAP,			.input_type = OPERAND_STACK,	.input_len = 0x2,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_SWAP15,			.static_gas = SGAS_SWAP,			.input_type = OPERAND_STACK,	.input_len = 0x2,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_SWAP16,			.static_gas = SGAS_SWAP,			.input_type = OPERAND_STACK,	.input_len = 0x2,	.output_type = OPERAND_STACK },

	{ .mnemonic = MN_LOG0,				.static_gas = SGAS_LOG0,			.input_type = OPERAND_STACK,	.input_len = 0x2,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_LOG1,				.static_gas = SGAS_LOG1,			.input_type = OPERAND_STACK,	.input_len = 0x3,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_LOG2,				.static_gas = SGAS_LOG2,			.input_type = OPERAND_STACK,	.input_len = 0x4,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_LOG3,				.static_gas = SGAS_LOG3,			.input_type = OPERAND_STACK,	.input_len = 0x5,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_LOG4,				.static_gas = SGAS_LOG4,			.input_type = OPERAND_STACK,	.input_len = 0x6,	.output_type = OPERAND_STACK },
	{ },
	{ },
	{ },

	{ },
	{ },
	{ },
	{ },
	{ },
	{ },
	{ },
	{ },

	{ },
	{ },
	{ },
	{ },
	{ },
	{ },
	{ },
	{ },

	{ },
	{ },
	{ },
	{ },
	{ },
	{ },
	{ },
	{ },

	{ },
	{ },
	{ },
	{ },
	{ },
	{ },
	{ },
	{ },

	{ },
	{ },
	{ },
	{ },
	{ },
	{ },
	{ },
	{ },

	{ },
	{ },
	{ },
	{ },
	{ },
	{ },
	{ },
	{ },

	{ },
	{ },
	{ },
	{ },
	{ },
	{ },
	{ },
	{ },

	{ },
	{ },
	{ },
	{ },
	{ },
	{ },
	{ },
	{ },

	{ },
	{ },
	{ },
	{ },
	{ },
	{ },
	{ },
	{ },

	{ .mnemonic = MN_CREATE,			.static_gas = SGAS_CREATE,			.input_type = OPERAND_STACK,	.input_len = 0x3,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_CALL,				.static_gas = SGAS_CALL,			.input_type = OPERAND_STACK,	.input_len = 0x7,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_CALLCODE,			.static_gas = SGAS_CALLCODE,		.input_type = OPERAND_STACK,	.input_len = 0x7,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_RETURN,			.static_gas = SGAS_RETURN,			.input_type = OPERAND_STACK,	.input_len = 0x2,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_DELEGATECALL,		.static_gas = SGAS_DELEGATECALL,	.input_type = OPERAND_STACK,	.input_len = 0x6,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_CREATE2,			.static_gas = SGAS_CREATE2,			.input_type = OPERAND_STACK,	.input_len = 0x4,	.output_type = OPERAND_STACK },
	{ },
	{ },

	{ },
	{ },
	{ .mnemonic = MN_STATICCALL,		.static_gas = SGAS_STATICCALL,		.input_type = OPERAND_STACK,	.input_len = 0x6,	.output_type = OPERAND_STACK },
	{ },
	{ },
	{ .mnemonic = MN_REVERT,			.static_gas = SGAS_REVERT,			.input_type = OPERAND_STACK,	.input_len = 0x2,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_INVALID,			.static_gas = SGAS_INVALID,			.input_type = OPERAND_NONE,		.input_len = 0x0,	.output_type = OPERAND_STACK },
	{ .mnemonic = MN_SELFDESTRUCT,		.static_gas = SGAS_SELFDESTRUCT,	.input_type = OPERAND_STACK,	.input_len = 0x1,	.output_type = OPERAND_STACK },
};
